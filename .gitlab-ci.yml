include:
  - local: ".gitlab/rules.yml"


stages:
  - check-style-docstring
  - build
  - test
  - generate-addon
  - release
  - deploy


variables:
  DEPLOY_DOCS:
    value: "false"
    description: "Indicate whether to deploy documentation or not."

  ADDON_NAME: "Toolsbox blender"
  MODULE_NAME: "tbb"
  PACKAGE_NAME: "toolsbox-blender"

  VERSION: "${CI_COMMIT_TAG}"
  ADDON_FILE_NAME: "${PACKAGE_NAME}"
  DOC_FILE_NAME: "${PACKAGE_NAME}_documentation"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGE_NAME}/${VERSION}"


check-style-docstring:
  stage: check-style-docstring
  image: python:latest

  extends:
    - .run_automatically

  before_script:
    - pip install -U pre-commit

  script:
    - pre-commit run --all-files


build-doc:
  stage: build
  image: python:latest

  needs:
    - job: check-style-docstring

  extends:
    - .run_automatically

  before_script:
    - apt-get update
    - apt-get install -y zip unzip libgl1-mesa-glx
    - pip install -r docs/requirements.txt
    - pip install -U https://github.com/pyvista/pyvista-wheels/raw/main/vtk-9.1.0.dev0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
    - |
      curl -L https://github.com/pyvista/pyvista/archive/refs/heads/main.zip --output pyvista.zip
    - unzip pyvista.zip
    - pip install -e pyvista-main


  script:
    # Rename ${MODULE_NAME}/__init__.py to avoid problems if a python module is not found
    - mv ${MODULE_NAME}/__init__.py ${MODULE_NAME}/___init__.py
    # Comment '@persistent' decorators because fake-bpy-module defines it at 'None', which is not callable and causes errors during 'sphinx-build'
    - find ${MODULE_NAME}/ -type f -name "*.py" -exec sed -i 's/@persistent/#@persistent/g' {} +
    - sphinx-build -b html docs/source build_docs
    - find ${MODULE_NAME}/ -type f -name "*.py" -exec sed -i 's/#@persistent/@persistent/g' {} +
    - mv ${MODULE_NAME}/___init__.py ${MODULE_NAME}/__init__.py

  artifacts:
    paths:
      - build_docs
    expire_in: 1 hour


test-addon:
  stage: test
  image: python:latest

  needs:
    - job: check-style-docstring

  extends:
    - .run_automatically_no_deploy

  before_script:
    - pip3 install -U blender_addon_tester

  script:
      - echo "Not implemented yet..."
    # - python3 -m scripts.run_tests.py


generate-addon:
  stage: generate-addon
  image: python:latest

  needs:
    - job: test-addon
    - job: build-doc
      artifacts: true

  extends:
    - .tag_only

  before_script:
    - echo $PACKAGE_REGISTRY_URL
    - echo $CI_JOB_ID
    - echo GE_JOB_ID=$CI_JOB_ID >> generate_addon.env

  script:
    - echo $ADDON_FILE_NAME
    - python --version
    - apt-get update
    - apt-get install -y zip unzip

    # Upload addon
    - zip -r "${MODULE_NAME}" "${MODULE_NAME}"
    - mv "${MODULE_NAME}.zip" "${ADDON_FILE_NAME}.zip"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${ADDON_FILE_NAME}.zip ${PACKAGE_REGISTRY_URL}/${ADDON_FILE_NAME}.zip

    # Upload documentation
    - zip -r "build_docs" "build_docs"
    - mv "build_docs.zip" "${DOC_FILE_NAME}.zip"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${DOC_FILE_NAME}.zip ${PACKAGE_REGISTRY_URL}/${DOC_FILE_NAME}.zip

  artifacts:
    paths:
      - ${ADDON_FILE_NAME}.zip
      - ${DOC_FILE_NAME}.zip

    reports:
      dotenv: generate_addon.env


release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest

  needs:
    - job: generate-addon
      artifacts: true

  extends:
    - .tag_only

  script:
    - echo "Running release job"

  release:
    name: "${ADDON_NAME} v${VERSION}"
    description: "Minimal Blender version required: 3.0."
    tag_name: "${VERSION}"
    assets:
      links:
        - name: "Download ${ADDON_NAME} v${VERSION}"
          url: "${PACKAGE_REGISTRY_URL}/${ADDON_FILE_NAME}.zip"
        - name: "Download documentation v${VERSION}"
          url: "${PACKAGE_REGISTRY_URL}/${DOC_FILE_NAME}.zip"


pages:
  stage: deploy
  image: python:latest

  needs:
    - job: build-doc
      artifacts: true

  extends:
    - .deploy_only
  
  before_script:
    - echo $CI_PAGES_DOMAIN
    - echo $CI_PAGES_URL

  script:
    - mv build_docs public
  
  artifacts:
    paths:
      - public