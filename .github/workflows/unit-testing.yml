name: Unit testing
on:
  pull_request: # Run in pull requests

  workflow_dispatch: # Allow to run this workflow manually

  push:
    branches: # Run when there is a push to main
      - "main"

jobs:
  Unit-testing:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        blender-version:
          [
            "3.0.0",
            "3.0.1",
            "3.1.0",
            "3.1.1",
            "3.1.2",
            "3.2.0",
            "3.2.1",
            "3.2.2",
          ]
    env:
      BLENDER_CACHE: ${{ github.workspace }}/cache # The place where blender releases are downloaded
      BLENDER_VERSION: ${{ matrix.blender-version }}
    steps:
      - uses: actions/checkout@v2.4.2

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - uses: syphar/restore-virtualenv@v1.2
        id: cache-virtualenv
        with:
          requirement_files: requirements.txt

      - name: Cache Blender release download
        uses: actions/cache@v3.0.4
        with:
          path: ${{ env.BLENDER_CACHE }}
          key: ubuntu-blender-${{ matrix.blender-version }}

      - name: Install dependencies
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt

      - name: Run tests
        run: python -m scripts.run_tests.py -b ${{ matrix.blender-version }}
